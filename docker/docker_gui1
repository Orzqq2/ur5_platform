#!/bin/bash -u

# This script is used to run a docker container with graphics support.
# All arguments to this script except "-c <container_name>" will be appended to a docker run command.
# If a container name is specified, and this container already exists, the container is re-entered,
# which easily allows entering the same persistent container from multiple terminals.

# Example commands:
# ./gui-docker --rm -it comac:dev /bin/bash     # Run a (randomly named) container that is removed on exit
# ./gui-docker -v ~/ros_ws:/root/ros_ws --rm -it comac:dev /bin/bash   # Same, but also link host volume ~/ros_ws to /root/ros_ws in the container
# ./gui-docker -c container_name                                  # Start (or continue) an interactive bash in a comac:dev container
# ./gui-docker                                                    # Same, but use the default container name "default_comac_container"


DOCKER_PARAMS="\
    --env=NVIDIA_VISIBLE_DEVICES=${NVIDIA_VISIBLE_DEVICES:-all} \
    --env=NVIDIA_DRIVER_CAPABILITIES=${NVIDIA_DRIVER_CAPABILITIES:+$NVIDIA_DRIVER_CAPABILITIES,}all"
 
function transfer_x11_permissions() {
    # store X11 access rights in temp file to be passed into docker container
    XAUTH=/tmp/.docker.xauth
    touch $XAUTH
    xauth nlist $DISPLAY | sed -e 's/^..../ffff/' | xauth -f $XAUTH nmerge -
}

function count_positional_args() {
    while true ; do
       case "${1:-}" in
          # Skip common options with a subsequent positional argument
          # This list is not exhaustive! Augment as you see fit.
          -v|--volume) shift ;;
          -w) shift ;;
          -e) shift ;;
          # Skip all other options
          -*) ;;
          *) break ;;
       esac
       shift
    done
    # Return remaining number of arguments
    echo $#
}

if [ $# -eq 0 ] ; then
   # If no options are specified at all, use the name "default_comac_container"
   CONTAINER_NAME=default_comac_painter_ur5_container1
else
  # Check for option -c or --container in first position
  case "$1" in
    -c|--container)
      shift
      # If next argument is not an option, use it as the container name
      if [[ "${1:-}" != -* ]] ; then
         CONTAINER_NAME="${1:-}"
         shift
      fi
      # Set default container name if still undefined
      CONTAINER_NAME="${CONTAINER_NAME:-default_comac_painter_ur5_container}"
      ;;
  esac
fi

transfer_x11_permissions

DOCKER_EXECUTABLE=${DOCKER_EXECUTABLE:-docker}

# If CONTAINER_NAME was specified and this container already exists, continue it
if [ -n "${CONTAINER_NAME:-}" ] ; then
   if [ -z "$($DOCKER_EXECUTABLE ps -aq --filter name=^$CONTAINER_NAME\$)" ] ; then
      # container not yet existing: add an option to name the container when running docker below
      NAME_OPTION="--name=$CONTAINER_NAME"
      if [ "$(count_positional_args $@)" == "0" ] ; then
         # If no further (positional) arguments were provided, start a bash in the default image (for dummy users)
         DUMMY_DEFAULTS="-it ur5_platform:dev bash"
      fi
   else
      if [ -z "$($DOCKER_EXECUTABLE ps -q --filter name=^$CONTAINER_NAME\$)" ] ; then
         echo -n "Start existing, but stopped container: "
         docker start $CONTAINER_NAME
      fi
      echo "Entering container: $CONTAINER_NAME"
      if [ $# -eq 0 ] ; then
         docker exec -it $CONTAINER_NAME bash
      else
         docker exec $CONTAINER_NAME $@
      fi
      rm $XAUTH
      exit 0
   fi
fi

source_dir=$(cd $(dirname $0)/.. && pwd)

data_dir=/home/comac-robot/comac_painter_ur5/painter_demo/saved_traj
data_mount_arg="-v $data_dir:/root/ws_emo/src/painter_demo/saved_traj"



${DOCKER_EXECUTABLE:-docker} run -it \
    -P \
    --gpus=all \
    --env="DISPLAY=$DISPLAY" \
    --env="QT_X11_NO_MITSHM=1" \
    --env="XAUTHORITY=$XAUTH" \
    --volume="/home/comac-manipulator/comac_painter_ur5/emo_ur5:/root/ws_emo/src/emo_ur5" \
    --volume="/tmp/.X11-unix:/tmp/.X11-unix:rw" \
    --volume="$XAUTH:$XAUTH" \
    -v traj_data:/root/ws_emo/src/painter_demo/saved_traj \
    ${NAME_OPTION:-} \
    ${DOCKER_PARAMS:-} \
    $@ ${DUMMY_DEFAULTS:-} 


# cleanup
rm $XAUTH
